on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      DJANGO_SECRET: ${{ secrets.DEV_HUB_DJANGO_SECRET_KEY }}
      DEBUG: ${{ secrets.DEV_HUB_DEBUG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::390402560704:role/GithubActionsDeployRole
          aws-region: us-east-1

      - name: Deploy with CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file cloudformation.yaml \
            --stack-name dev-hub \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides VpcId=vpc-0dba77117c2b67537 KeyName=personal-server

      - name: Get EC2 Public IP
        run: |
          echo "EC2_PUBLIC_IP=$(aws cloudformation describe-stacks --stack-name dev-hub --query "Stacks[0].Outputs[?OutputKey=='PublicIp'].OutputValue" --output text)" >> $GITHUB_ENV

      - name: Set up SSH key
        run: |
          echo "$EC2_SSH_KEY" > private-key.pem
          chmod 600 private-key.pem

      - name: Copy repository to EC2
        run: |
          rsync -avz -e "ssh -i private-key.pem -o StrictHostKeyChecking=no" --exclude '.git' ./ ubuntu@${{ env.EC2_PUBLIC_IP }}:/home/ubuntu/dev_hub

      - name: Create .env file locally
        run: |
          echo "DEV_HUB_DJANGO_SECRET=${{ secrets.DEV_HUB_DJANGO_SECRET }}" > .env
          echo "DEV_HUB_DEBUG=${{ secrets.DEV_HUB_DEBUG }}" >> .env
          echo "DEV_HUB_ALLOWED_HOSTS=${{ vars.DEV_HUB_ALLOWED_HOSTS }}" >> .env

      - name: Copy .env file to EC2
        run: scp -o StrictHostKeyChecking=no -i private-key.pem .env ubuntu@${{ env.EC2_PUBLIC_IP }}:/home/ubuntu/dev_hub/.env

      - name: Start Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no -i private-key.pem ubuntu@${{ env.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/ubuntu/dev_hub
            docker compose down
            docker compose up -d --build
          EOF